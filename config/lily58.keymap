/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        c_to_alpha {
            bindings = <&to 0>;
            key-positions = <42 43>;
            layers = <3 4>;
        };

        c_to_left {
            bindings = <&to 3>;
            key-positions = <42 43>;
            layers = <0>;
        };

        c_bt_previous {
            bindings = <&bt BT_PRV>;
            key-positions = <6 7>;
        };

        c_bt_next {
            bindings = <&bt BT_NXT>;
            key-positions = <8 9>;
        };

        c_bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <10 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            display-name = "alpha";
            bindings = <
&kp F12           &kp F1          &kp F2          &kp F3              &kp F4            &kp F5                                      &kp F6           &kp F7            &kp F8              &kp F9          &kp F10         &kp F11
&kp GRAVE         &kp Q           &kp W           &kp F               &kp P             &kp B                                       &kp J            &kp L             &kp U               &kp Y           &kp APOSTROPHE  &kp SEMI
&sl LEFT_CONTROL  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_SHIFT T  &kp G                                       &kp M            &mt LEFT_SHIFT N  &mt LEFT_CONTROL E  &mt LEFT_ALT I  &mt LEFT_GUI O  &sl LEFT_ALT
&sl LEFT_SHIFT    &kp Z           &kp X           &kp C               &kp D             &kp V        &kp ESCAPE    &kp PRINTSCREEN  &kp K            &kp H             &kp COMMA           &kp DOT         &kp SLASH       &sl LEFT_GUI
                                                  &sl 2               &kp MINUS         &lt 1 SPACE  &lt 2 TAB     &lt 2 ENTER      &lt 1 BACKSPACE  &kp DELETE        &sl 1
            >;
        };

        number {
            display-name = "number";
            bindings = <
&trans  &trans             &trans                 &trans               &trans             &trans                                    &trans         &trans         &trans       &trans     &trans     &trans
&trans  &kp LEFT_BRACKET   &kp N7                 &kp N8               &kp N9             &kp RIGHT_BRACKET                         &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp F12    &trans
&trans  &mt LEFT_GUI SEMI  &mt LEFT_ALT NUMBER_4  &mt LEFT_CONTROL N5  &mt LEFT_SHIFT N6  &kp EQUAL                                 &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT  &kp F11    &trans
&trans  &kp SLASH          &kp N1                 &kp N2               &kp N3             &kp BACKSLASH      &trans         &trans  &kp LS(LC(Z))  &kp LC(V)      &kp LC(C)    &kp LC(X)  &kp LC(Z)  &trans
                                                  &sl 2                &kp PERIOD         &lt 1 N0           &lt 2 MINUS    &trans  &trans         &trans         &to 0
            >;
        };

        symbol {
            display-name = "symbol";
            bindings = <
&trans  &trans                         &trans               &trans                    &trans                 &trans                                   &trans          &trans          &trans        &trans           &trans    &trans
&trans  &kp LEFT_BRACE                 &kp AMPERSAND        &kp ASTERISK              &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE                          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp F12   &trans
&trans  &mt LEFT_GUI LEFT_PARENTHESIS  &mt LEFT_ALT DOLLAR  &mt LEFT_CONTROL PERCENT  &mt LEFT_SHIFT CARET   &kp RIGHT_PARENTHESIS                    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp F11   &trans
&trans  &kp SLASH                      &kp EXCLAMATION      &kp AT_SIGN               &kp HASH               &kp BACKSLASH          &trans    &trans  &mkp MB1        &mkp MB2        &mkp MB3      &mkp MB4         &mkp MB5  &trans
                                                            &to 0                     &trans                 &trans                 &trans    &trans  &trans          &trans          &sl 1
            >;
        };

        game_left {
            display-name = "game (left)";
            bindings = <
&kp EQUAL &kp N1  &kp N2  &kp N3                   &kp N4              &kp N5                                           &none  &none  &none  &none  &none  &none
&sl 4     &kp Q   &kp W   &kp E                    &kp R               &kp T                                            &none  &none  &none  &none  &none  &none
&sl 1     &kp A   &kp S   &kp D                    &kp F               &kp G                                            &none  &none  &none  &none  &none  &none
&sl 2     &kp Z   &kp X   &kp C                    &kp V               &kp B               &kp BACKSPACE         &none  &none  &none  &none  &none  &none  &none
                          &mt LEFT_CONTROL ESCAPE  &mt LEFT_ALT SPACE  &mt LEFT_SHIFT TAB  &mt LEFT_GUI ENTER    &none  &none  &none  &none
            >;
        };

        game_right {
            display-name = "game (right)";
            bindings = <
&kp MINUS  &kp N0    &kp N9   &kp N8     &kp N7  &kp N6                   &none  &none  &none  &none  &none  &none
&trans     &kp P     &kp O    &kp I      &kp U   &kp Y                    &none  &none  &none  &none  &none  &none
&trans     &kp SEMI  &kp L    &kp K      &kp J   &kp H                    &none  &none  &none  &none  &none  &none
&trans     &kp FSLH  &kp DOT  &kp COMMA  &kp M   &kp N   &trans    &none  &none  &none  &none  &none  &none  &none
                              &trans     &trans  &trans  &trans    &none  &none  &none  &none
            >;
        };
    };
};
