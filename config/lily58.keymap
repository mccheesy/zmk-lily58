/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt { flavor = "tap-preferred"; };

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&sk>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        ht: holdtap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        sht: sticky_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&sk>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        cwt: caps_word_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&caps_word>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        sft_del: sft_del {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp BSPC>, <&kp DEL>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
            bindings = <&sticky_alt_tab LALT>, <&kp TAB>;
        comma_shift: comma_shift {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COMMA>, <&kp LPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comma_ctrl: comma_ctrl {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&comma_shift>, <&kp LBKT>;
            mods = <(MOD_LCTRL|MOD_RCTRL)>;
        };

        comma_alt: comma_alt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&comma_ctrl>, <&kp LT>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        comma_hold: comma_hold {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp QMARK>, <&comma_double>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        comma_double: comma_double {
            compatible = "zmk,behavior-tap-dance";
            bindings = <&comma_hold>, <&kp SEMI>;
        };

        dot_shift: dot_shift {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp DOT>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_ctrl: dot_ctrl {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&dot_shift>, <&kp RBKT>;
            mods = <(MOD_LCTRL|MOD_RCTRL)>;
        };

        dot_alt: dot_alt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&dot_ctrl>, <&kp GT>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        dot_hold: dot_hold {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp EXCL>, <&dot_double>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        dot_double: dot_double {
            compatible = "zmk,behavior-tap-dance";
            bindings = <&dot_hold>, <&kp COLON>;
        };
    };

    combos {
        compatible = "zmk,combos";

        c_to_base {
            bindings = <&to 0>;
            key-positions = <0 1>;
            layers = <1>;
        };

        c_to_game {
            bindings = <&to 1>;
            key-positions = <2 3>;
            layers = <0>;
        };

        c_bt_previous {
            bindings = <&bt BT_PRV>;
            key-positions = <6 7>;
        };

        c_bt_next {
            bindings = <&bt BT_NXT>;
            key-positions = <8 9>;
        };

        c_bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <10 11>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <48 49>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
&none           &none               &none           &none               &none               &none                                                    &none           &none           &none           &none               &none           &none
&none           &kp Q               &kp W           &kp F               &kp P               &kp B                                                    &kp J           &kp L           &kp U           &kp Y               &ht SEMI COLON  &none
&none           &kp A               &kp R           &hm LALT S          &hm LGUI T          &kp G                                                    &kp M           &hm RGUI N      &hm RALT E      &kp I               &kp O           &none
&none           &kp Z               &kp X           &kp C               &kp D               &kp V                    &none           &none           &kp K           &kp H           &comma_double   &dot_double         &ht UNDER FSLH  &none
                                                    &none               &none               &mt LC(LS(LALT)) SPACE   &sk LSHFT       &sk RCTRL       &to 2           &none           &none
            >;
        };

        game {
            display-name = "game";
            bindings = <
&kp EQUAL       &kp N1              &kp N2          &kp N3              &kp N4              &kp N5                                                   &kp N6          &kp N7          &kp N8          &kp N9              &kp N0          &kp MINUS
&kp GRAVE       &kp Q               &kp W           &kp F               &kp P               &kp B                                                    &kp J           &kp L           &kp U           &kp Y               &kp APOS        &kp SEMI
&sl 2           &kp A               &kp R           &kp S               &kp T               &kp G                                                    &kp M           &kp N           &kp E           &kp I               &kp O           &sl 2
&sl 4           &kp Z               &kp X           &kp C               &kp D               &kp V                    &none           &none           &kp K           &kp H           &kp COMMA       &kp DOT             &kp FSLH        &sl 4
                                                    &mt LGUI RET        &mt LCTRL ESC       &mt LALT SPACE           &mt LSHFT TAB   &mt RSHFT RET   &mt RALT BSPC   &mt RCTRL DEL   &mt RGUI RA(TAB)
            >;
        };

        sym {
            display-name = "sym";
            bindings = <
&none           &none               &none           &none               &none               &none                                                    &none             &none           &none         &none               &none           &none
&none           &ht LC(LA(ESC)) ESC &ht PSCRN AT    &ht LC(PSCRN) HASH  &ht LG(PSCRN) DLLR  &kp PRCNT                                                &kp CARET         &kp AMPS        &kp STAR      &kp SEMI            &sft_del        &none
&none           &sht LALT TAB       &kp EQUAL       &kp LA(RBKT)        &kp LA(LS(RBKT))    &kp SQT                                                  &ht HOME FSLH     &kp LBRC        &kp RBRC      &ht END PIPE        &kp ENTER       &none
&none           &kp TILDE           &kp LA(N3)      &kp LA(LBKT)        &kp LA(LS(LBKT))    &kp DQT                  &none           &none           &kp LBKT          &kp LPAR        &kp RPAR      &kp RBKT            &to 3           &none
                                                    &none               &none               &to 0                    &trans          &sk RALT        &to 4             &none           &none
            >;
        };

        nav {
            bindings = <
&none           &none               &none           &none               &none               &none                                                    &none             &none           &none         &none               &none           &none
&none           &trans              &msc SCRL_LEFT  &mmv MOVE_UP        &msc SCRL_RIGHT     &ht LG(H) LG(Q)                                          &kp RG(LBKT)      &kp RS(RC(TAB)) &kp RC(TAB)   &kp RG(RBKT)        &trans          &none
&none           &trans              &mmv MOVE_LEFT  &mmv MOVE_DOWN      &mmv MOVE_RIGHT     &hm LCTRL DEL                                            &ht RG(LEFT) LEFT &kp DOWN        &kp UP        &ht RG(RIGHT) RIGHT &trans          &none
&none           &ht LG(GRAVE) GRAVE &mkp MB2        &msc SCRL_DOWN      &msc SCRL_UP        &mkp MB1                 &none           &none           &mkp MB4          &kp PG_DN       &kp PG_UP     &mkp MB5            &none           &none
                                                    &none               &none               &trans                   &sk LGUI        &sk RALT        &to 2             &none           &none
            >;
        };

        num {
            display-name = "num";
            bindings = <
&none           &none               &none           &none               &none               &none                                                    &none           &none           &none           &none               &none           &none
&none           &trans              &kp C_PP        &kp C_PREV          &kp C_NEXT          &kp UNDER                                                &kp MINUS       &kp N7          &kp N8          &kp N9              &trans          &none
&none           &trans              &none           &kp C_VOL_DN        &kp C_VOL_UP        &kp PLUS                                                 &kp EQUAL       &kp N4          &kp N5          &kp N6              &trans          &none
&none           &sys_reset          &kp STAR        &kp C_BRI_DN        &kp C_BRI_UP        &kp DOT                  &none           &none           &kp N0          &kp N1          &kp N2          &kp N3              &to 3           &none
                                                    &none               &none               &to 0                    &sk LGUI        &sk RALT        &to 2           &none           &none
            >;
        };
    };
};
