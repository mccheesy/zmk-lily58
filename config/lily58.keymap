// dt-formatter: multilineListCommaStyle="leading"

#include <behaviors/none.dtsi>
#include <behaviors/transparent.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    bindings = <&sl>, <&kp>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    bindings = <&sk>, <&kp>;
};

/ {
    behaviors {
        hm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&sk>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            display-name = "Home Row Mod";
        };

        ls: layer_sticky_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&lt>, <&sk>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            display-name = "Layer Sticky Tap";
        };

        asc: autoshift_custom {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&sh>, <&kp>;

            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            display-name = "Autoshift (Custom)";
        };

        swap_at: swap_app_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&swap_a>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&sk>, <&kp>;
        };

        // Unmodded: Shift | With Shift: Caps Word.

        ms: magicshift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            display-name = "Magic Shift";
        };

        // Tap: &kp | Hold: Shift Caps Word.

        ms_t: magic_shift_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&ms>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            display-name = "Magic Shift Tap";
        };

        atab: alt_tab {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;

            ignored-key-positions = <13 45 24 25 26 27 28 29 30 31 32 33 34 35 50 51 52 53 54 55 56 57>;
            display-name = "Alt-Tab";
        };

        ctab: ctrl_tab {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LCTL>, <&kp TAB>, <&kt LCTL>;

            ignored-key-positions = <13 45 24 25 26 27 28 29 30 31 32 33 34 35 50 51 52 53 54 55 56 57>;
            display-name = "Ctrl-Tab";
        };

        gtab: gui_tab {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;

            ignored-key-positions = <13 45 24 25 26 27 28 29 30 31 32 33 34 35 50 51 52 53 54 55 56 57>;
            display-name = "Ctrl-Tab";
        };

        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp DOT>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        cmma_qmark: cmma_qmark {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COMMA>, <&kp QMARK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fslh_tild: fslh_tild {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp FSLH>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        asde: autoshift_dot_excl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&dot_excl>;

            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            display-name = "Autoshift (Custom)";
        };

        ascq: autoshift_cmma_qmark {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&cmma_qmark>;

            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            display-name = "Autoshift (Custom)";
        };

        asft: autoshift_fslh_tild {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&fslh_tild>;

            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            display-name = "Autoshift (Custom)";
        };

        alt_f1: alt_f1 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N1>, <&kp F1>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f2: alt_f2 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N2>, <&kp F2>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f3: alt_f3 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N3>, <&kp F3>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f4: alt_f4 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N4>, <&kp F4>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f5: alt_f5 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N5>, <&kp F5>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f6: alt_f6 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N6>, <&kp F6>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f7: alt_f7 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N7>, <&kp F7>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f8: alt_f8 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N8>, <&kp F8>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f9: alt_f9 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N9>, <&kp F9>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f10: alt_f10 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N0>, <&kp F10>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f11: alt_f11 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp MINUS>, <&kp F11>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f12: alt_f12 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp EQUAL>, <&kp F12>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
            display-name = "Copy";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(X)>;
            display-name = "Cut";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>;
            display-name = "Paste";
        };

        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>;
            display-name = "Undo";
        };

        redo: redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(Z))>;
            display-name = "Redo";
        };

        swapper: swapper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press>
                , <&swap_at 0 LA(TAB)>
                , <&macro_pause_for_release>
                , <&macro_release>
                , <&swap_at 0 LA(TAB)>
                ;

            display-name = "Alt-Tab";
        };

        launcher: launcher {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            display-name = "Launcher";
        };

        /**
         * Swap windows
         * Windows/Linux: Grave-Tab
         * MacOS: Ctrl-Tab (Cmd-Tab if CMD_SWAP)
         */

        swap_w: swap_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&to 5>, <&macro_tap>, <&gtab>;
        };

        /**
         * Swap applications
         * Windows/Linux: Alt-Tab
         * MacOS: Cmd-Tab
         */

        swap_a: swap_app {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&to 5>, <&macro_tap>, <&ctab>;
        };

        // Hold: Caps Lock; Tap: Caps Word

        cw: caps_lock_caps_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press>
                , <&hold_cw CAPS 0>
                , <&macro_pause_for_release>
                , <&macro_release>
                , <&hold_cw CAPS 0>
                ;

            display-name = "Caps Word-Hold";
        };

        hold_cw: hold_caps_word {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&cw_td>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            display-name = "Hold Caps Word";
        };

        cw_td: caps_word_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps_word>;

            tapping-term-ms = <175>;
            display-name = "Caps Word Tap Dance";
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press>
                , <&macro_param_1to1 &macro_param_1to2 &asc MACRO_PLACEHOLDER MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_release>
                , <&macro_param_1to1 &macro_param_1to2 &asc MACRO_PLACEHOLDER MACRO_PLACEHOLDER>
                ;

            display-name = "Autoshift";
        };

        sh: shifted_keypress {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press>
                , <&kp LSHFT &macro_param_1to1>
                , <&macro_tap>
                , <&kp MACRO_PLACEHOLDER>
                , <&macro_release>
                , <&kp LSHFT>
                ;

            display-name = "Shifted Keypress";
        };
    };

    combos {
        compatible = "zmk,combos";

        to_base {
            bindings = <&to 0>;
            key-positions = <0 1>;
        };

        to_game {
            bindings = <&to 1>;
            key-positions = <2 1>;
        };

        wm_combo {
            bindings = <&swapper>;
            key-positions = <15 16>;  // FP
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <25 26>;  //  AR
        };

        lalt {
            bindings = <&sk LALT>;
            key-positions = <26 27>; // RS
        };

        lgui {
            bindings = <&sk LGUI>;
            key-positions = <26 27 28>; // RST
        };

        lctl {
            bindings = <&sk LCTRL>;
            key-positions = <27 28>;  // ST
        };

        rctl {
            bindings = <&sk LCTRL>;
            key-positions = <31 32>;  // NE
        };

        rgui {
            bindings = <&sk LGUI>;
            key-positions = <31 32 33>;  // NEI
        };

        ralt {
            bindings = <&sk LALT>;
            key-positions = <32 33>;  // IO
        };

        c_pscrn {
            bindings = <&kp LC(PSCRN)>;
            key-positions = <19 20>;  // LU
        };

        g_pscrn {
            bindings = <&kp LG(PSCRN)>;
            key-positions = <19 20 21>;  // LUY
        };

        pscrn {
            bindings = <&kp PSCRN>;
            key-positions = <20 21>;  // UY
        };

        bt_prv {
            bindings = <&bt BT_PRV>;
            key-positions = <6 7>;  // RT2 RT3
        };

        bt_nxt {
            bindings = <&bt BT_NXT>;
            key-positions = <7 8>;  // RT3 RT4
        };

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <6 7 8>; // RT2 RT3 RT4
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";

            // ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓                             ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
            // ┃      `      ┃      1      ┃      2      ┃      3      ┃      4      ┃      5      ┃                             ┃      6      ┃      7      ┃      8      ┃      9      ┃      0      ┃      -      ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃      =      ┃      Q      ┃      W      ┃      F      ┃      P      ┃      B      ┃                             ┃      J      ┃      L      ┃      U      ┃      Y      ┃      '      ┃      ;      ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃      (      ┃      A      ┃      R      ┃      S      ┃      T      ┃      G      ┃                             ┃      M      ┃      N      ┃      E      ┃      I      ┃      O      ┃      )      ┃
            // ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓ ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃      [      ┃      Z      ┃      X      ┃      C      ┃      D      ┃      V      ┃   ALT TAB   ┃ ┃  LAUNCHER   ┃      K      ┃      H      ┃      ,      ┃      .      ┃      /      ┃      ]      ┃
            // ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫ ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
            //                                           ┃             ┃     ESC     ┃     SPC     ┃     TAB     ┃ ┃    ENTER    ┃     BSPC    ┃     DEL     ┃             ┃
            //                                           ┃    (GUI)    ┃    (ALT)    ┃    (CTL)    ┃    (SFT)    ┃ ┃    (SFT)    ┃    (CTL)    ┃    (ALT)    ┃    (GUI)    ┃
            //                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛ ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛

            bindings = <
&none  &as N1       &as N2      &as N3    &as N4        &as N5                                           &as N6          &as N7        &as N8         &as N9        &as N0         &none
&none  &kp Q        &kp W       &lt 4 F   &kp P         &kp B                                            &kp J           &kp L         &lt 4 U        &kp Y         &as SQT        &none
&none  &hm LSHFT A  &hm LALT R  &lt 2 S   &hm LGUI T    &kp G                                            &kp M           &hm LGUI N    &lt 2 E        &hm LALT I    &hm LSHFT O    &none
&none  &kp Z        &kp X       &kp C     &kp D         &kp V            &swapper         &launcher      &kp K           &kp H         &ascq QMARK 0  &asde EXCL 0  &asft TILDE 0  &none
                                &sk LGUI  &mt LALT ESC  &mt LCTRL SPACE  &mt LSHFT TAB    &mt RSHFT RET  &mt LCTRL BSPC  &mt LALT DEL  &sk LGUI
            >;
        };

        game {
            display-name = "game";

            // ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓                             ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
            // ┃      `      ┃      1      ┃      2      ┃      3      ┃      4      ┃      5      ┃                             ┃      6      ┃      7      ┃      8      ┃      9      ┃      0      ┃      -      ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃      =      ┃      Q      ┃      W      ┃      F      ┃      P      ┃      B      ┃                             ┃      J      ┃      L      ┃      U      ┃      Y      ┃      '      ┃      ;      ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃    move     ┃      A      ┃      R      ┃      S      ┃      T      ┃      G      ┃                             ┃      M      ┃      N      ┃      E      ┃      I      ┃      O      ┃    move     ┃
            // ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓ ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃   number    ┃      Z      ┃      X      ┃      C      ┃      D      ┃      V      ┃   ALT TAB   ┃ ┃  LAUNCHER   ┃      K      ┃      H      ┃      ,      ┃      .      ┃      /      ┃   number    ┃
            // ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫ ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
            //                                           ┃     GUI     ┃  ESC (CTL)  ┃  SPC (ALT)  ┃  TAB (SHFT) ┃ ┃  RET (SHFT) ┃ BSPC (ALT)  ┃  DEL (CTL)  ┃     GUI     ┃
            //                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛ ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛

            bindings = <
&as GRAVE  &asc N6 N1  &asc N7 N2  &asc N8 N3  &asc N9 N4     &asc N0 N5                              &none  &none  &none  &none  &none  &none
&kp F2     &kp Q       &kp W       &kp F       &kp P          &kp B                                   &none  &none  &none  &none  &none  &none
&kp F3     &kp A       &kp R       &kp S       &kp T          &kp G                                   &none  &none  &none  &none  &none  &none
&kp F4     &lt 2 Z     &kp X       &kp C       &kp D          &kp V           &swapper         &none  &none  &none  &none  &none  &none  &none
                                   &sk LGUI    &mt LCTRL ESC  &mt LALT SPACE  &mt LSHFT TAB    &none  &none  &none  &none
            >;
        };

        num {
            display-name = "number";

            // ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓                             ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
            // ┃             ┃             ┃             ┃             ┃             ┃             ┃                             ┃             ┃             ┃             ┃             ┃             ┃             ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃      (      ┃      7      ┃      8      ┃      9      ┃      )      ┃                             ┃      {      ┃      &      ┃      #      ┃      @      ┃      }      ┃             ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃      +      ┃      4      ┃      5      ┃      6      ┃      =      ┃                             ┃      \      ┃      ^      ┃      _      ┃      $      ┃      :      ┃             ┃
            // ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓ ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃      *      ┃      1      ┃      2      ┃      3      ┃      /      ┃             ┃ ┃             ┃      |      ┃      %      ┃      (      ┃      )      ┃      ;      ┃             ┃
            // ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫ ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
            //                                           ┃      *      ┃      +      ┃      0      ┃      -      ┃ ┃      <      ┃      _      ┃      >      ┃      @      ┃
            //                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛ ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛

            bindings = <
&trans  &trans    &trans  &trans    &trans         &trans                                         &trans           &trans       &trans       &trans    &trans     &trans
&trans  &kp LBKT  &kp N7  &kp N8    &kp N9         &kp RBKT                                       &kp LBRC         &kp AMPS     &kp HASH     &kp AT    &kp RBRC   &trans
&trans  &kp PLUS  &kp N4  &lt 2 N5  &kp N6         &kp EQUAL                                      &kp BSLH         &kp CARET    &lt 2 GRAVE  &kp DLLR  &kp COLON  &trans
&trans  &kp STAR  &kp N1  &kp N2    &kp N3         &kp FSLH      &trans             &trans        &kp PIPE         &kp PRCNT    &kp LPAR     &kp RPAR  &kp SEMI   &trans
                          &trans    &mt LALT PLUS  &mt LCTRL N0  &mt LSHFT MINUS    &mt LSHFT LT  &mt LCTRL UNDER  &mt LALT GT  &trans
            >;
        };

        nav {
            display-name = "move";

            // ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓                             ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
            // ┃             ┃             ┃             ┃             ┃             ┃             ┃                             ┃             ┃             ┃             ┃             ┃             ┃             ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃     F12     ┃     F7      ┃     F8      ┃     F9      ┃     F15     ┃                             ┃    HOME     ┃  PAGE DOWN  ┃   PAGE UP   ┃     END     ┃             ┃             ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃     F11     ┃     F4      ┃     F5      ┃     F6      ┃     F14     ┃                             ┃    LEFT     ┃    DOWN     ┃     UP      ┃    RIGHT    ┃             ┃             ┃
            // ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓ ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃     F10     ┃     F1      ┃     F2      ┃     F3      ┃     F13     ┃             ┃ ┃             ┃             ┃    PSCRN    ┃             ┃             ┃    mouse    ┃             ┃
            // ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫ ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
            //                                           ┃             ┃             ┃             ┃             ┃ ┃    ENTER    ┃     BSPC    ┃     DEL     ┃             ┃
            //                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛ ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛

            bindings = <
&trans  &trans     &trans     &trans       &trans     &trans                       &trans     &trans         &trans         &trans         &trans             &trans
&trans  &kp LC(Q)  &kp LC(W)  &lt 4 LC(F)  &kp LC(P)  &kp LC(B)                    &kp HOME   &kp PG_DN      &lt 4 PG_UP    &kp END        &to 5              &trans
&trans  &kp LC(A)  &kp LC(R)  &kp LC(S)    &kp LC(T)  &kp LC(G)                    &kp LEFT   &kp DOWN       &kp UP         &kp RIGHT      &none              &trans
&trans  &undo      &cut       &copy        &paste     &redo      &trans    &trans  &kp PSCRN  &kp LG(PSCRN)  &kp LC(PSCRN)  &kp LA(PSCRN)  &kp LC(LA(PSCRN))  &trans
                              &trans       &trans     &trans     &trans    &trans  &trans     &trans         &trans
            >;
        };

        mse {
            display-name = "mouse";

            // ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓                             ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
            // ┃      (      ┃      1      ┃      2      ┃      3      ┃      4      ┃      5      ┃                             ┃      6      ┃      7      ┃      8      ┃      9      ┃      0      ┃      )      ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃     ^-Q     ┃     ^-W     ┃     ^-T     ┃     ^-P     ┃     ^-B     ┃                             ┃  SCRL LEFT  ┃  SCRL DOWN  ┃   SCRL UP   ┃  SCRL RIGHT ┃    base     ┃             ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃     GUI     ┃     ALT     ┃     CTL     ┃    SHFT     ┃    ^-⇧-G    ┃                             ┃  MOVE LEFT  ┃  MOVE DOWN  ┃   SCRL UP   ┃  MOVE RIGHT ┃             ┃             ┃
            // ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓ ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃    UNDO     ┃     CUT     ┃    COPY     ┃    PASTE    ┃    REDO     ┃   ALT TAB   ┃ ┃  LAUNCHER   ┃    REDO     ┃    PASTE    ┃    COPY     ┃     CUT     ┃    UNDO     ┃            ┃
            // ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫ ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
            //                                           ┃     MB5     ┃     MB4     ┃     MB1     ┃     MB2     ┃ ┃     MB2     ┃     MB1     ┃     MB4     ┃     MB5     ┃
            //                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛ ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛

            bindings = <
&trans  &trans   &trans  &trans    &trans    &trans                             &trans          &trans          &trans        &trans           &trans  &trans
&trans  &kp F12  &kp F7  &kp F8    &kp F9    &kp F15                            &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &to 0   &trans
&trans  &kp F11  &kp F4  &kp F5    &kp F6    &kp F14                            &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv SCRL_RIGHT  &none   &trans
&trans  &kp F10  &kp F1  &kp F2    &kp F3    &kp F13    &trans        &trans    &redo           &paste          &copy         &cut             &undo   &trans
                         &sk LGUI  &sk LALT  &sk LCTRL  &sk LSHIFT    &mkp MB2  &mkp MB1        &mkp MB4        &mkp MB5
            >;
        };

        app {
            display-name = "apps";

            // ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓                             ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
            // ┃      `      ┃      1      ┃      2      ┃      3      ┃      4      ┃      5      ┃                             ┃      6      ┃      7      ┃      8      ┃      9      ┃      0      ┃      -      ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃      Q      ┃      W      ┃      F      ┃      P      ┃      B      ┃                             ┃      J      ┃      L      ┃      U      ┃      Y      ┃      '      ┃             ┃
            // ┣━━━━━━━━━━━━━┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫                             ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃    LEFT     ┃    DOWN     ┃     UP      ┃    RIGHT    ┃      G      ┃                             ┃      M      ┃    LEFT     ┃    DOWN     ┃     UP      ┃    RIGHT    ┃             ┃
            // ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓ ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
            // ┃             ┃      Z      ┃      X      ┃      C      ┃      D      ┃      V      ┃   ALT TAB   ┃ ┃  LAUNCHER   ┃      K      ┃      H      ┃      ,      ┃      .      ┃      /      ┃             ┃
            // ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫ ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
            //                                           ┃             ┃    BASE     ┃   ALT TAB   ┃     RET     ┃ ┃     RET     ┃   ALT TAB   ┃    BASE     ┃             ┃
            //                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛ ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛

            bindings = <
&trans  &trans    &trans    &trans  &trans     &trans                        &trans    &trans    &trans    &trans  &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans                        &trans    &trans    &trans    &trans  &trans     &trans
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                        &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &trans    &trans    &trans  &trans     &trans    &trans     &trans   &trans    &trans    &trans    &trans  &trans     &trans
                            &trans  &to 0      &swapper  &kp RET    &kp RET  &swapper  &to 0     &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
