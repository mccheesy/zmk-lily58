/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        ctrl_lbracket: ctrl_lbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "CRTL_LBRACKET";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp LEFT_BRACE>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        sft_lparen: shift_lparen {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_LPAREN";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&ctrl_lbracket>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ctrl_rbracket: ctrl_rbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "CRTL_RBRACKET";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp RIGHT_BRACE>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        sft_rparen: shift_rparen {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_RPAREN";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_PARENTHESIS>, <&ctrl_rbracket>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        alt_f1: alt_f1 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F1";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp F1>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f2: alt_f2 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F2";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp F2>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f3: alt_f3 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F3";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp F3>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f4: alt_f4 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F4";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp F4>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f5: alt_f5 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F5";
            #binding-cells = <0>;
            bindings = <&kp N5>, <&kp F5>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f6: alt_f6 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F6";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp F6>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f7: alt_f7 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F7";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp F7>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f8: alt_f8 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F8";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp F8>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f9: alt_f9 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F9";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp F9>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f10: alt_f10 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F10";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp F10>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        c_to_base {
            bindings = <&to 0>;
            key-positions = <37 41>;
            layers = <1>;
        };

        c_to_game {
            bindings = <&to 1>;
            key-positions = <37 41>;
            layers = <0>;
        };

        c_bt_previous {
            bindings = <&bt BT_PRV>;
            key-positions = <6 7>;
        };

        c_bt_next {
            bindings = <&bt BT_NXT>;
            key-positions = <8 9>;
        };

        c_bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <10 11>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <48 49>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
&none  &none           &none           &none               &none             &none                                    &none            &none              &none                &none            &none            &none
&none  &kp Q           &kp W           &kp F               &kp P             &kp B                                    &kp J            &kp L              &kp U                &kp Y            &kp APOSTROPHE   &none
&none  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_SHIFT T  &kp G                                    &kp M            &mt RIGHT_SHIFT N  &mt RIGHT_CONTROL E  &mt RIGHT_ALT I  &mt RIGHT_GUI O  &none
&none  &kp Z           &kp X           &kp C               &kp D             &kp V        &sft_lparen    &sft_rparen  &kp K            &kp H              &kp COMMA            &kp DOT          &kp SEMI         &none
                                       &none               &kp ESCAPE        &lt 2 SPACE  &lt 3 TAB      &lt 3 ENTER  &lt 2 BACKSPACE  &kp DELETE         &none
            >;
        };

        game {
            display-name = "game";
            bindings = <
&kp EQUAL  &alt_f1  &alt_f2  &alt_f3             &alt_f4                  &alt_f5                                                          &none                    &none                     &none                  &none    &none     &kp MINUS
&kp GRAVE  &kp Q    &kp W    &kp F               &kp P                    &kp B                                                            &kp J                    &kp L                     &kp U                  &kp Y    &kp APOS  &kp SEMI
&sl 2      &kp A    &kp R    &kp S               &kp T                    &kp G                                                            &kp M                    &kp N                     &kp E                  &kp I    &kp O     &sl 2
&sl 3      &kp Z    &kp X    &kp C               &kp D                    &kp V               &kp BACKSPACE         &kp DELETE             &kp K                    &kp H                     &kp COMMA              &kp DOT  &kp FSLH  &sl 3
                             &mt LEFT_GUI ENTER  &mt LEFT_CONTROL ESCAPE  &mt LEFT_ALT SPACE  &mt LEFT_SHIFT TAB    &mt RIGHT_SHIFT ENTER  &mt RIGHT_ALT BACKSPACE  &mt RIGHT_CONTROL DELETE  &mt RIGHT_GUI LA(TAB)
            >;

            label = "game";
        };

        num {
            display-name = "num";
            bindings = <
&trans  &trans              &trans                 &trans               &trans             &trans                                  &trans         &trans         &trans       &trans     &trans     &trans
&trans  &kp LEFT_BRACKET    &kp N7                 &kp N8               &kp N9             &kp RIGHT_BRACKET                       &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp F12    &trans
&trans  &mt LEFT_GUI GRAVE  &mt LEFT_ALT NUMBER_4  &mt LEFT_CONTROL N5  &mt LEFT_SHIFT N6  &kp EQUAL                               &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT  &kp F11    &trans
&trans  &kp SLASH           &kp N1                 &kp N2               &kp N3             &kp BACKSLASH      &trans       &trans  &kp LS(LC(Z))  &kp LC(V)      &kp LC(C)    &kp LC(X)  &kp LC(Z)  &trans
                                                   &none                &kp PERIOD         &kp N0             &kp MINUS    &trans  &trans         &trans         &none
            >;
        };

        sym {
            display-name = "sym";
            bindings = <
&trans  &trans              &trans               &trans                    &trans                 &trans                             &trans          &trans          &trans        &trans           &trans    &trans
&trans  &kp LEFT_BRACE      &kp AMPERSAND        &kp ASTERISK              &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE                    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp F14   &trans
&trans  &mt LEFT_GUI COLON  &mt LEFT_ALT DOLLAR  &mt LEFT_CONTROL PERCENT  &mt LEFT_SHIFT CARET   &kp LS(EQUAL)                      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp F13   &trans
&trans  &kp TILDE           &kp EXCLAMATION      &kp AT_SIGN               &kp HASH               &kp PIPE         &trans    &trans  &mkp MB1        &mkp MB2        &mkp MB3      &mkp MB4         &mkp MB5  &trans
                                                 &none                     &trans                 &trans           &trans    &trans  &trans          &trans          &none
            >;
        };
    };
};
