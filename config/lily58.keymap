/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        alt_lbracket: alt_lbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_LBRACKET";
            bindings = <&kp LEFT_BRACKET>, <&kp LEFT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_rbracket: alt_rbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_RBRACKET";
            bindings = <&kp RIGHT_BRACKET>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        sft_lparen: sft_lparen {
            compatible = "zmk,behavior-mod-morph";
            label = "SFT_LPAREN";
            bindings = <&kp LEFT_PARENTHESIS>, <&alt_lbracket>;

            #binding-cells = <0>;
            keep-mods = <(MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sft_rparen: sft_rparen {
            compatible = "zmk,behavior-mod-morph";
            label = "SFT_RPAREN";
            bindings = <&kp RIGHT_PARENTHESIS>, <&alt_rbracket>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n1: alt_n1 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N1";
            bindings = <&kp N1>, <&kp F1>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n2: alt_n2 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N2";
            bindings = <&kp N2>, <&kp F2>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f3: alt_f3 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_F3";
            bindings = <&kp N3>, <&kp F3>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n4: alt_n4 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N4";
            bindings = <&kp N4>, <&kp F4>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n5: alt_n5 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N5";
            bindings = <&kp N5>, <&kp F5>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n6: alt_n6 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N6";
            bindings = <&kp N6>, <&kp F6>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n7: alt_n7 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N7";
            bindings = <&kp N7>, <&kp F7>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n8: alt_n8 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N8";
            bindings = <&kp N8>, <&kp F8>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n9: alt_n9 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N9";
            bindings = <&kp N9>, <&kp F9>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_n0: alt_n0 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_N0";
            bindings = <&kp N0>, <&kp F10>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to-base {
            bindings = <&to 0>;
            key-positions = <0 1>;
            layers = <0>;
        };

        to-game {
            bindings = <&to 7>;
            key-positions = <2 1>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "base";
            bindings = <
&sk LEFT_GUI      &kp F1          &kp F2          &kp F3                    &kp F4            &kp F5                                   &kp F6           &kp F7            &kp F8                    &kp F9          &kp F10         &sk LEFT_GUI
&sk LEFT_ALT      &kp Q           &kp W           &kp F                     &kp P             &kp B                                    &kp J            &kp L             &kp U                     &kp Y           &kp APOSTROPHE  &sk LEFT_ALT
&sk LEFT_CONTROL  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LEFT_CONTROL S        &mt LEFT_SHIFT T  &kp G                                    &kp M            &mt LEFT_SHIFT N  &mt LEFT_CONTROL E        &mt LEFT_ALT I  &mt LEFT_GUI O  &sk LEFT_CONTROL
&sk LEFT_SHIFT    &kp Z           &kp X           &kp C                     &kp D             &kp V        &sft_lparen    &sft_rparen  &kp K            &kp H             &kp COMMA                 &kp DOT         &kp SLASH       &sk LEFT_SHIFT
                                                  &kp LS(LA(LEFT_CONTROL))  &lt 6 ESCAPE      &lt 4 SPACE  &lt 5 TAB      &lt 2 ENTER  &lt 1 BACKSPACE  &lt 3 DELETE      &kp LS(LA(LEFT_CONTROL))
            >;

            label = "colemak";
        };

        num {
            bindings = <
&trans  &trans            &trans        &trans        &trans        &trans                                  &trans     &trans          &trans            &trans        &sys_reset    &bootloader
&trans  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET                       &trans     &trans          &trans            &trans        &trans        &trans
&trans  &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL                               &kp ENTER  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans
&trans  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &trans       &trans  &kp TAB    &trans          &trans            &trans        &trans        &trans
                                        &trans        &kp PERIOD    &kp NUMBER_0       &kp MINUS    &trans  &trans     &trans          &trans
            >;

            label = "num";
        };

        sym {
            bindings = <
&trans  &trans          &trans           &trans        &trans                &trans                                           &trans     &trans          &trans            &trans        &trans        &trans
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE                                  &trans     &trans          &trans            &trans        &trans        &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT   &kp CARET             &kp PLUS                                         &kp ENTER  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT        &kp HASH              &kp PIPE               &trans            &trans  &kp TAB    &trans          &trans            &trans        &trans        &trans
                                         &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &trans  &trans     &trans          &trans
            >;

            label = "sym";
        };

        function {
            bindings = <
&trans  &trans  &kp F10  &kp F11  &kp F12         &kp F16                                     &trans     &trans          &trans            &trans        &trans        &trans
&trans  &trans  &kp F7   &kp F8   &kp F9          &kp F15                                     &trans     &trans          &trans            &trans        &trans        &trans
&trans  &trans  &kp F4   &kp F5   &kp F6          &kp F14                                     &kp ENTER  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans
&trans  &trans  &kp F1   &kp F2   &kp F3          &kp F13          &trans             &trans  &kp TAB    &trans          &trans            &trans        &trans        &trans
                         &trans   &kp SCROLLLOCK  &kp PRINTSCREEN  &kp PAUSE_BREAK    &trans  &trans     &trans          &trans
            >;

            label = "function";
        };

        arrows {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "nav";
            bindings = <
&trans  &trans               &trans               &trans               &trans               &trans                                &trans         &trans         &trans        &trans     &trans        &trans
&trans  &kp LG(PRINTSCREEN)  &kp LA(PRINTSCREEN)  &kp LC(PRINTSCREEN)  &kp LS(PRINTSCREEN)  &kp PRINTSCREEN                       &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp INSERT    &trans
&trans  &kp LEFT_GUI         &kp LEFT_ALT         &kp LEFT_CONTROL     &kp LEFT_SHIFT       &kp ENTER                             &kp LEFT       &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp CAPSLOCK  &trans
&trans  &trans               &trans               &trans               &trans               &kp TAB          &trans    &trans     &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp INSERT    &trans
                                                  &trans               &trans               &trans           &trans    &kp ENTER  &kp BACKSPACE  &kp DELETE     &trans
            >;

            label = "arrows";
        };

        mouse {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "msc";
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans                         &trans          &trans          &trans        &trans           &trans     &trans
&trans  &trans        &trans        &trans            &trans          &trans                         &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &mkp MB5   &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp ENTER                      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MB4   &trans
&trans  &trans        &trans        &trans            &trans          &kp TAB    &trans    &trans    &kp LS(LC(Z))   &kp LC(P)       &kp LC(C)     &kp LC(X)        &kp LC(Z)  &trans
                                    &trans            &trans          &trans     &trans    &mkp MB2  &mkp MB1        &mkp MB3        &trans
            >;

            label = "mouse";
        };

        media {
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans                        &trans            &trans                &trans                &trans           &trans         &trans
&trans  &trans        &trans        &trans            &trans          &trans                        &kp K_REFRESH     &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_AC_SEARCH  &kp C_AC_HOME  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans                        &kp C_PREVIOUS    &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp K_NEXT       &kp K_LOCK     &trans
&trans  &trans        &trans        &trans            &trans          &trans  &trans    &trans      &bt BT_PRV        &bt BT_NXT            &bt BT_CLR            &trans           &trans         &trans
                                    &trans            &trans          &trans  &trans    &kp K_STOP  &kp K_PLAY_PAUSE  &kp K_MUTE            &trans
            >;

            label = "media";
        };

        game {
            bindings = <
&kp GRAVE  &alt_n1  &alt_n2  &alt_f3             &alt_n4                  &alt_n5                                           &trans  &trans  &trans  &trans  &trans  &trans
&sl 2      &kp Q    &kp W    &kp E               &kp R                    &kp T                                             &trans  &trans  &trans  &trans  &trans  &trans
&sl 8      &kp A    &kp S    &kp D               &kp F                    &kp G                                             &trans  &trans  &trans  &trans  &trans  &trans
&sl 1      &kp Z    &kp X    &kp C               &kp V                    &kp B               &kp BACKSPACE         &trans  &trans  &trans  &trans  &trans  &trans  &trans
                             &mt LEFT_GUI ENTER  &mt LEFT_CONTROL ESCAPE  &mt LEFT_ALT SPACE  &mt LEFT_SHIFT TAB    &trans  &trans  &trans  &trans
            >;

            label = "game";
        };

        right {
            bindings = <
&kp MINUS  &alt_n6  &alt_n7  &alt_n8    &alt_n9  &alt_n0                         &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp J    &kp L    &kp U      &kp Y    &kp SEMI                        &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp M    &kp N    &kp E      &kp I    &kp O                           &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp K    &kp H    &kp COMMA  &kp DOT  &kp FSLH  &kp DELETE    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                             &trans     &trans   &trans    &trans        &trans  &trans  &trans  &trans
            >;

            label = "right";
        };
    };
};
